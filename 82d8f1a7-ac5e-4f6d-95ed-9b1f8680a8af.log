"{\"ip_address\":null,\"time\":\"2023-05-06T12:55:46.596Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":0,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:09.986Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_restarting\",\"cell_index\":\"\",\"cell_num\":0,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.160Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":0,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.222Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"save_notebook\",\"cell_source\":\"[\n  {\n    \\"id\\": \\"c5a92f9ab731421b8f78ada6653d00db\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# # Do not forget to check if your notebook log collection plugin is working\\nfrom mining_extension import check_logging\\ncheck_logging(\\\\"http://3.249.245.244:9999\\\\")\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"469c03c456014d3fb1fe0a59ee7a9239\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# !pip install pandas\\",\n    \\"execution_count\\": 2\n  },\n  {\n    \\"id\\": \\"98598092d0f0436f8ea1d2366167da3e\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# !pip install scikit-learn\\",\n    \\"execution_count\\": 3\n  },\n  {\n    \\"id\\": \\"ecdff8d93dc7461cb8cc26c07cb325dc\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# !pip install catboost\\n# !pip install xgboost\\",\n    \\"execution_count\\": 4\n  },\n  {\n    \\"id\\": \\"d80230aa092945a995c4ffc36f180879\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# pip install alive-progress\\",\n    \\"execution_count\\": 5\n  },\n  {\n    \\"id\\": \\"df830b570feb4b8696b1d8425f7a0ea8\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# !pip install tqdm\\",\n    \\"execution_count\\": 6\n  },\n  {\n    \\"id\\": \\"883140faf9354f9b8ee27c8bed3613e4\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"import pandas as pd\\nimport sklearn\\nimport catboost\\nimport sklearn.feature_extraction.text\\nfrom sklearn.feature_extraction.text import TfidfVectorizer\\nfrom sklearn.tree import DecisionTreeClassifier\\nfrom catboost import CatBoostClassifier\\nfrom sklearn.linear_model import LogisticRegression\\nfrom sklearn.ensemble import RandomForestClassifier\\nfrom sklearn.metrics import roc_auc_score\\nfrom sklearn.model_selection import train_test_split\\nimport matplotlib.pyplot as plt\\nfrom xgboost import XGBClassifier\\nfrom sklearn.metrics import accuracy_score\\nimport numpy as np\\",\n    \\"execution_count\\": 7\n  },\n  {\n    \\"id\\": \\"2ece2ea9e46945528db5bdc1bb585269\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"import time\\nfrom tqdm import tqdm\\nimport gc\\n\\",\n    \\"execution_count\\": 8\n  },\n  {\n    \\"id\\": \\"683db506d1644f4b94f0a29a732e7db4\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"import zipfile\\nwith zipfile.ZipFile("data/task1/jetnet_logs.zip", "r") as zip_ref:\\n    zip_ref.extractall("data/task1")\\",\n    \\"execution_count\\": 9\n  },\n  {\n    \\"id\\": \\"01a9ebe4882d468d946e5d58ebe56f29\\",\n    \\"cell_type\\": \\"markdown\\",\n    \\"source\\": \\"# Extracting data\\"\n  },\n  {\n    \\"id\\": \\"604910edb364430c96101538278e9f5a\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"data = pd.read_csv("data/task1/jetnet_logs.txt", delimiter="\\\\t")\\ndata.head()\\",\n    \\"execution_count\\": 10\n  },\n  {\n    \\"id\\": \\"7633b4b56e384e52a4b747dec629dbf1\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"with open("data/task1/jetnet_logs.txt") as f:\\n    content = f.readline()\\",\n    \\"execution_count\\": 11\n  },\n  {\n    \\"id\\": \\"b2043ac24df64da387a757e4c31d8e78\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"l = content.strip().split(\\\\":\\\\", 1)\\n# print(l[1])\\nl[1] = l[1].replace("-->", "->").strip().split("->")\\n# print(l[1])\\nl[1] = list(map(lambda x: x.strip().split(\\\\" \\\\", 1), l[1]))\\n# actions = [t[0] for t in l[1]]\\n# timestamps = [t[1] for t in l[1]]\\nl\\",\n    \\"execution_count\\": 12\n  },\n  {\n    \\"id\\": \\"5dd1dfd6fe554c0b8522072b2c4588e0\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"f = open("data/task1/jetnet_logs.txt")\\nlines = f.readlines()\\ncolumns = ["user_id", "session_num", "action_time","action_name"]\\ndf = pd.DataFrame([], columns = columns)\\ndf\\",\n    \\"execution_count\\": 13\n  },\n  {\n    \\"id\\": \\"8d518abcb18b4c18851be488d394ff87\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"for n, line in tqdm(enumerate(np.array(lines))):\\n    line = line.strip()\\n    if line:\\n        l = line.split(\\\\":\\\\", 1)\\n        ids = l[0][1:]\\n        l = l[1]\\n        l = l.replace("-->", "\\\\t").replace("->", "\\\\t").strip().split("\\\\t")\\n        for i, action in enumerate(np.array(l)):\\n            action = action.strip().split(\\\\" \\\\", 1)\\n            data = [ids, action]\\n            df0 = pd.DataFrame([], columns = ["user_id", raw])\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"46727834f2b24150acbc5e0206c186c5\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"14a1bd337a3c4916bd99a364fc1a30c6\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\nfor n, line in tqdm(enumerate(np.array(lines))):\\n#     if n > 500: break\\n    line = line.strip()\\n    if line:\\n        l = line.split(\\\\":\\\\", 1)\\n        ids = l[0].replace("@", "")\\n        l = l[1]\\n        l = l.replace("-->", "\\\\t").replace("->", "\\\\t").strip().split("\\\\t")\\n        for i, action in enumerate(np.array(l)):\\n            action = action.strip().split(\\\\" \\\\", 1)\\n            data = [ids, -1, "", ""]\\n            if len(action) == 2:\\n#                 print(action)\\n                data[1]= i\\n                data[2] = action[1].strip()[1:-1]\\n                data[3] = action[0].strip()\\n            try: \\n                df.loc[len(df)] = data\\n                print(data)\\n            except:\\n                continue\\n        gc.collect()\\n#         actions = l[1][1,:1]\\n#         print(actions)\\n#         timestamps = [t[1] for t in l[1]]\\n#         if actions[-1] == "END":\\n#             actions = actions[:-1]\\n#             data[-1] = timestamps[-1]\\n#             timestamps = timestamps[:-1]\\n        \\n#         data.append([col.strip().split(" ")[0] for col in parts[1].strip().split(" -> ")])  \\ndf\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"bf7c2816b71840ad8070332128deb551\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\n\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"cc62eb4bb5074e06a544eaad1fda04f3\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"e742fce2cbbc4f709a59efd33574f521\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"7b8a044fd0ba4b0982633f1e3197d039\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\",\n    \\"execution_count\\": null\n  }\n]\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\"}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.224Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":0,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.225Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"469c03c456014d3fb1fe0a59ee7a9239\",\"cell_num\":0,\"cell_source\":\"# !pip install pandas\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.225Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"98598092d0f0436f8ea1d2366167da3e\",\"cell_num\":0,\"cell_source\":\"# !pip install scikit-learn\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.226Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ecdff8d93dc7461cb8cc26c07cb325dc\",\"cell_num\":0,\"cell_source\":\"# !pip install catboost\n# !pip install xgboost\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.227Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d80230aa092945a995c4ffc36f180879\",\"cell_num\":0,\"cell_source\":\"# pip install alive-progress\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.227Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"df830b570feb4b8696b1d8425f7a0ea8\",\"cell_num\":0,\"cell_source\":\"# !pip install tqdm\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.228Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"883140faf9354f9b8ee27c8bed3613e4\",\"cell_num\":0,\"cell_source\":\"import pandas as pd\nimport sklearn\nimport catboost\nimport sklearn.feature_extraction.text\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.tree import DecisionTreeClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nimport numpy as np\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.229Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"2ece2ea9e46945528db5bdc1bb585269\",\"cell_num\":0,\"cell_source\":\"import time\nfrom tqdm import tqdm\nimport gc\n\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.229Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"683db506d1644f4b94f0a29a732e7db4\",\"cell_num\":0,\"cell_source\":\"import zipfile\nwith zipfile.ZipFile("data/task1/jetnet_logs.zip", "r") as zip_ref:\n    zip_ref.extractall("data/task1")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.230Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"604910edb364430c96101538278e9f5a\",\"cell_num\":0,\"cell_source\":\"data = pd.read_csv("data/task1/jetnet_logs.txt", delimiter="\\t")\ndata.head()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.231Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7633b4b56e384e52a4b747dec629dbf1\",\"cell_num\":0,\"cell_source\":\"with open("data/task1/jetnet_logs.txt") as f:\n    content = f.readline()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.232Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"b2043ac24df64da387a757e4c31d8e78\",\"cell_num\":0,\"cell_source\":\"l = content.strip().split(\\":\\", 1)\n# print(l[1])\nl[1] = l[1].replace("-->", "->").strip().split("->")\n# print(l[1])\nl[1] = list(map(lambda x: x.strip().split(\\" \\", 1), l[1]))\n# actions = [t[0] for t in l[1]]\n# timestamps = [t[1] for t in l[1]]\nl\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T12:56:11.233Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5dd1dfd6fe554c0b8522072b2c4588e0\",\"cell_num\":0,\"cell_source\":\"f = open("data/task1/jetnet_logs.txt")\nlines = f.readlines()\ncolumns = ["user_id", "session_num", "action_time","action_name"]\ndf = pd.DataFrame([], columns = columns)\ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:17.605Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"b2043ac24df64da387a757e4c31d8e78\",\"cell_num\":1,\"cell_source\":\"l = content.strip().split(\\":\\", 1)\n# print(l[1])\nl[1] = l[1].replace("-->", "->").strip().split("->")\n# print(l[1])\nl[1] = list(map(lambda x: x.strip().split(\\" \\", 1), l[1]))\n# actions = [t[0] for t in l[1]]\n# timestamps = [t[1] for t in l[1]]\nl\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[{\\"output_type\\":\\"execute_result\\",\\"size\\":1176}]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:17.608Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5dd1dfd6fe554c0b8522072b2c4588e0\",\"cell_num\":1,\"cell_source\":\"f = open("data/task1/jetnet_logs.txt")\nlines = f.readlines()\ncolumns = ["user_id", "session_num", "action_time","action_name"]\ndf = pd.DataFrame([], columns = columns)\ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[{\\"output_type\\":\\"execute_result\\",\\"size\\":645}]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:17.611Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d518abcb18b4c18851be488d394ff87\",\"cell_num\":1,\"cell_source\":\"for n, line in tqdm(enumerate(np.array(lines))):\n    line = line.strip()\n    if line:\n        l = line.split(\\":\\", 1)\n        ids = l[0][1:]\n        l = l[1]\n        l = l.replace("-->", "\\t").replace("->", "\\t").strip().split("\\t")\n        for i, action in enumerate(np.array(l)):\n            action = action.strip().split(\\" \\", 1)\n            data = [ids, action]\n            df0 = pd.DataFrame([], columns = ["user_id", raw])\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[{\\"output_type\\":\\"stream\\",\\"size\\":22},{\\"output_type\\":\\"error\\",\\"size\\":0}]\"}"[EVENT_SEPARATOR]
"{\"time\":\"2023-05-06T12:56:17.611Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"8d518abcb18b4c18851be488d394ff87\",\"cell_num\":1,\"cell_source\":\"{\\"output_type\\":\\"error\\",\\"ename\\":\\"NameError\\",\\"evalue\\":\\"name "raw" is not defined\\"}\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:17.613Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14a1bd337a3c4916bd99a364fc1a30c6\",\"cell_num\":1,\"cell_source\":\"\nfor n, line in tqdm(enumerate(np.array(lines))):\n#     if n > 500: break\n    line = line.strip()\n    if line:\n        l = line.split(\\":\\", 1)\n        ids = l[0].replace("@", "")\n        l = l[1]\n        l = l.replace("-->", "\\t").replace("->", "\\t").strip().split("\\t")\n        for i, action in enumerate(np.array(l)):\n            action = action.strip().split(\\" \\", 1)\n            data = [ids, -1, "", ""]\n            if len(action) == 2:\n#                 print(action)\n                data[1]= i\n                data[2] = action[1].strip()[1:-1]\n                data[3] = action[0].strip()\n            try: \n                df.loc[len(df)] = data\n                print(data)\n            except:\n                continue\n        gc.collect()\n#         actions = l[1][1,:1]\n#         print(actions)\n#         timestamps = [t[1] for t in l[1]]\n#         if actions[-1] == "END":\n#             actions = actions[:-1]\n#             data[-1] = timestamps[-1]\n#             timestamps = timestamps[:-1]\n        \n#         data.append([col.strip().split(" ")[0] for col in parts[1].strip().split(" -> ")])  \ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:17.625Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":1,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:21.560Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":0,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:21.796Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":1,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[{\\"output_type\\":\\"stream\\",\\"size\\":23}]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:30.527Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_restarting\",\"cell_index\":\"\",\"cell_num\":1,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.598Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":1,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.600Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"469c03c456014d3fb1fe0a59ee7a9239\",\"cell_num\":1,\"cell_source\":\"# !pip install pandas\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.601Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"98598092d0f0436f8ea1d2366167da3e\",\"cell_num\":1,\"cell_source\":\"# !pip install scikit-learn\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.602Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ecdff8d93dc7461cb8cc26c07cb325dc\",\"cell_num\":1,\"cell_source\":\"# !pip install catboost\n# !pip install xgboost\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.603Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d80230aa092945a995c4ffc36f180879\",\"cell_num\":1,\"cell_source\":\"# pip install alive-progress\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.604Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"df830b570feb4b8696b1d8425f7a0ea8\",\"cell_num\":1,\"cell_source\":\"# !pip install tqdm\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.605Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"883140faf9354f9b8ee27c8bed3613e4\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\nimport sklearn\nimport catboost\nimport sklearn.feature_extraction.text\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.tree import DecisionTreeClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nimport numpy as np\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.606Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"2ece2ea9e46945528db5bdc1bb585269\",\"cell_num\":1,\"cell_source\":\"import time\nfrom tqdm import tqdm\nimport gc\n\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.607Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"683db506d1644f4b94f0a29a732e7db4\",\"cell_num\":1,\"cell_source\":\"import zipfile\nwith zipfile.ZipFile("data/task1/jetnet_logs.zip", "r") as zip_ref:\n    zip_ref.extractall("data/task1")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.608Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"604910edb364430c96101538278e9f5a\",\"cell_num\":1,\"cell_source\":\"data = pd.read_csv("data/task1/jetnet_logs.txt", delimiter="\\t")\ndata.head()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.609Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7633b4b56e384e52a4b747dec629dbf1\",\"cell_num\":1,\"cell_source\":\"with open("data/task1/jetnet_logs.txt") as f:\n    content = f.readline()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.610Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"b2043ac24df64da387a757e4c31d8e78\",\"cell_num\":1,\"cell_source\":\"l = content.strip().split(\\":\\", 1)\n# print(l[1])\nl[1] = l[1].replace("-->", "->").strip().split("->")\n# print(l[1])\nl[1] = list(map(lambda x: x.strip().split(\\" \\", 1), l[1]))\n# actions = [t[0] for t in l[1]]\n# timestamps = [t[1] for t in l[1]]\nl\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:56:31.611Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5dd1dfd6fe554c0b8522072b2c4588e0\",\"cell_num\":1,\"cell_source\":\"f = open("data/task1/jetnet_logs.txt")\nlines = f.readlines()\ncolumns = ["user_id", "session_num", "action_time","action_name"]\ndf = pd.DataFrame([], columns = columns)\ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:58:10.822Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14a1bd337a3c4916bd99a364fc1a30c6\",\"cell_num\":17,\"cell_source\":\"\nfor n, line in tqdm(enumerate(np.array(lines))):\n#     if n > 500: break\n    line = line.strip()\n    if line:\n        l = line.split(\\":\\", 1)\n        ids = l[0].replace("@", "")\n        l = l[1]\n        l = l.replace("-->", "\\t").replace("->", "\\t").strip().split("\\t")\n        for i, action in enumerate(np.array(l)):\n            action = action.strip().split(\\" \\", 1)\n            data = [ids, -1, "", ""]\n            if len(action) == 2:\n                data[1]= i\n                data[2] = action[1].strip()[1:-1]\n                data[3] = action[0].strip()\n            try: \n                df.loc[len(df)] = data\n                clear(data)\n                clear(action)\n            except:\n                clear(data)\n                continue\n        gc.collect()\n        clear(l)\n#         actions = l[1][1,:1]\n#         print(actions)\n#         timestamps = [t[1] for t in l[1]]\n#         if actions[-1] == "END":\n#             actions = actions[:-1]\n#             data[-1] = timestamps[-1]\n#             timestamps = timestamps[:-1]\n        \n#         data.append([col.strip().split(" ")[0] for col in parts[1].strip().split(" -> ")])  \ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[{\\"output_type\\":\\"stream\\",\\"size\\":22},{\\"output_type\\":\\"error\\",\\"size\\":0}]\"}"[EVENT_SEPARATOR]
"{\"time\":\"2023-05-06T12:58:10.822Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14a1bd337a3c4916bd99a364fc1a30c6\",\"cell_num\":17,\"cell_source\":\"{\\"output_type\\":\\"error\\",\\"ename\\":\\"NameError\\",\\"evalue\\":\\"name "clear" is not defined\\"}\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T12:59:47.073Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14a1bd337a3c4916bd99a364fc1a30c6\",\"cell_num\":16,\"cell_source\":\"\nfor n, line in tqdm(enumerate(np.array(lines))):\n#     if n > 500: break\n    line = line.strip()\n    if line:\n        l = line.split(\\":\\", 1)\n        ids = l[0].replace("@", "")\n        l = l[1]\n        l = l.replace("-->", "\\t").replace("->", "\\t").strip().split("\\t")\n        for i, action in enumerate(np.array(l)):\n            action = action.strip().split(\\" \\", 1)\n            data = [ids, -1, "", ""]\n            if len(action) == 2:\n                data[1]= i\n                data[2] = action[1].strip()[1:-1]\n                data[3] = action[0].strip()\n            try: \n                df.loc[len(df)] = data\n                del(data)\n                del(action)\n            except:\n                del(data)\n                continue\n        gc.collect()\n        del(l)\n#         actions = l[1][1,:1]\n#         print(actions)\n#         timestamps = [t[1] for t in l[1]]\n#         if actions[-1] == "END":\n#             actions = actions[:-1]\n#             data[-1] = timestamps[-1]\n#             timestamps = timestamps[:-1]\n        \n#         data.append([col.strip().split(" ")[0] for col in parts[1].strip().split(" -> ")])  \ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[{\\"output_type\\":\\"stream\\",\\"size\\":26}]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:32.472Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d518abcb18b4c18851be488d394ff87\",\"cell_num\":15,\"cell_source\":\"df0 = pd.DataFrame([], columns = ["user_id", "raw"])\nfor n, line in tqdm(enumerate(np.array(lines))):\n    line = line.strip()\n    if line:\n        l = line.split(\\":\\", 1)\n        ids = l[0][1:]\n        l = l[1]\n        l = l.replace("-->", "\\t").replace("->", "\\t").strip().split("\\t")\n        for i, action in enumerate(np.array(l)):\n            action = action.strip().split(\\" \\", 1)\n            data = [ids, action]\n            df0.loc[len(df)] = data\n            del(data)\n            del(action)\n    gc.collect()\n    del(l)\ndf0\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[{\\"output_type\\":\\"error\\",\\"size\\":0}]\"}"[EVENT_SEPARATOR]
"{\"time\":\"2023-05-06T13:00:32.472Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"8d518abcb18b4c18851be488d394ff87\",\"cell_num\":15,\"cell_source\":\"{\\"output_type\\":\\"error\\",\\"ename\\":\\"NameError\\",\\"evalue\\":\\"name "pd" is not defined\\"}\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:51.959Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_restarting\",\"cell_index\":\"\",\"cell_num\":16,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.844Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":16,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.846Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"469c03c456014d3fb1fe0a59ee7a9239\",\"cell_num\":16,\"cell_source\":\"# !pip install pandas\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.847Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"98598092d0f0436f8ea1d2366167da3e\",\"cell_num\":16,\"cell_source\":\"# !pip install scikit-learn\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.848Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ecdff8d93dc7461cb8cc26c07cb325dc\",\"cell_num\":16,\"cell_source\":\"# !pip install catboost\n# !pip install xgboost\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.849Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d80230aa092945a995c4ffc36f180879\",\"cell_num\":16,\"cell_source\":\"# pip install alive-progress\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.850Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"df830b570feb4b8696b1d8425f7a0ea8\",\"cell_num\":16,\"cell_source\":\"# !pip install tqdm\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.851Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"883140faf9354f9b8ee27c8bed3613e4\",\"cell_num\":16,\"cell_source\":\"import pandas as pd\nimport sklearn\nimport catboost\nimport sklearn.feature_extraction.text\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.tree import DecisionTreeClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nimport numpy as np\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.852Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"2ece2ea9e46945528db5bdc1bb585269\",\"cell_num\":16,\"cell_source\":\"import time\nfrom tqdm import tqdm\nimport gc\n\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.853Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"683db506d1644f4b94f0a29a732e7db4\",\"cell_num\":16,\"cell_source\":\"import zipfile\nwith zipfile.ZipFile("data/task1/jetnet_logs.zip", "r") as zip_ref:\n    zip_ref.extractall("data/task1")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.854Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"604910edb364430c96101538278e9f5a\",\"cell_num\":16,\"cell_source\":\"data = pd.read_csv("data/task1/jetnet_logs.txt", delimiter="\\t")\ndata.head()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.855Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7633b4b56e384e52a4b747dec629dbf1\",\"cell_num\":16,\"cell_source\":\"with open("data/task1/jetnet_logs.txt") as f:\n    content = f.readline()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.856Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"b2043ac24df64da387a757e4c31d8e78\",\"cell_num\":16,\"cell_source\":\"l = content.strip().split(\\":\\", 1)\n# print(l[1])\nl[1] = l[1].replace("-->", "->").strip().split("->")\n# print(l[1])\nl[1] = list(map(lambda x: x.strip().split(\\" \\", 1), l[1]))\n# actions = [t[0] for t in l[1]]\n# timestamps = [t[1] for t in l[1]]\nl\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:00:52.857Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5dd1dfd6fe554c0b8522072b2c4588e0\",\"cell_num\":16,\"cell_source\":\"f = open("data/task1/jetnet_logs.txt")\nlines = f.readlines()\ncolumns = ["user_id", "session_num", "action_time","action_name"]\ndf = pd.DataFrame([], columns = columns)\ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.882Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d80230aa092945a995c4ffc36f180879\",\"cell_num\":20,\"cell_source\":\"# pip install alive-progress\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.884Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"df830b570feb4b8696b1d8425f7a0ea8\",\"cell_num\":20,\"cell_source\":\"# !pip install tqdm\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.884Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"883140faf9354f9b8ee27c8bed3613e4\",\"cell_num\":20,\"cell_source\":\"import pandas as pd\nimport sklearn\nimport catboost\nimport sklearn.feature_extraction.text\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.tree import DecisionTreeClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nimport numpy as np\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.885Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"2ece2ea9e46945528db5bdc1bb585269\",\"cell_num\":20,\"cell_source\":\"import time\nfrom tqdm import tqdm\nimport gc\n\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.885Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"683db506d1644f4b94f0a29a732e7db4\",\"cell_num\":20,\"cell_source\":\"import zipfile\nwith zipfile.ZipFile("data/task1/jetnet_logs.zip", "r") as zip_ref:\n    zip_ref.extractall("data/task1")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.886Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"604910edb364430c96101538278e9f5a\",\"cell_num\":20,\"cell_source\":\"data = pd.read_csv("data/task1/jetnet_logs.txt", delimiter="\\t")\ndata.head()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.887Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7633b4b56e384e52a4b747dec629dbf1\",\"cell_num\":20,\"cell_source\":\"with open("data/task1/jetnet_logs.txt") as f:\n    content = f.readline()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.887Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"b2043ac24df64da387a757e4c31d8e78\",\"cell_num\":20,\"cell_source\":\"l = content.strip().split(\\":\\", 1)\n# print(l[1])\nl[1] = l[1].replace("-->", "->").strip().split("->")\n# print(l[1])\nl[1] = list(map(lambda x: x.strip().split(\\" \\", 1), l[1]))\n# actions = [t[0] for t in l[1]]\n# timestamps = [t[1] for t in l[1]]\nl\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.888Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5dd1dfd6fe554c0b8522072b2c4588e0\",\"cell_num\":20,\"cell_source\":\"f = open("data/task1/jetnet_logs.txt")\nlines = f.readlines()\ncolumns = ["user_id", "session_num", "action_time","action_name"]\ndf = pd.DataFrame([], columns = columns)\ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.889Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d518abcb18b4c18851be488d394ff87\",\"cell_num\":20,\"cell_source\":\"df0 = pd.DataFrame([], columns = ["user_id", "raw"])\nfor n, line in tqdm(enumerate(np.array(lines))):\n    line = line.strip()\n    if line:\n        l = line.split(\\":\\", 1)\n        ids = l[0][1:]\n        l = l[1]\n        l = l.replace("-->", "\\t").replace("->", "\\t").strip().split("\\t")\n        for i, action in enumerate(np.array(l)):\n            action = action.strip().split(\\" \\", 1)\n            data = [ids, action]\n            df0.loc[len(df)] = data\n            del(data)\n            del(action)\n    gc.collect()\n    del(l)\ndf0\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.890Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14a1bd337a3c4916bd99a364fc1a30c6\",\"cell_num\":20,\"cell_source\":\"\n# for n, line in tqdm(enumerate(np.array(lines))):\n# #     if n > 500: break\n#     line = line.strip()\n#     if line:\n#         l = line.split(\\":\\", 1)\n#         ids = l[0].replace("@", "")\n#         l = l[1]\n#         l = l.replace("-->", "\\t").replace("->", "\\t").strip().split("\\t")\n#         for i, action in enumerate(np.array(l)):\n#             action = action.strip().split(\\" \\", 1)\n#             data = [ids, -1, "", ""]\n#             if len(action) == 2:\n#                 data[1]= i\n#                 data[2] = action[1].strip()[1:-1]\n#                 data[3] = action[0].strip()\n#             try: \n#                 df.loc[len(df)] = data\n#                 del(data)\n#                 del(action)\n#             except:\n#                 del(data)\n#                 continue\n#         gc.collect()\n#         del(l)\n# #         actions = l[1][1,:1]\n# #         print(actions)\n# #         timestamps = [t[1] for t in l[1]]\n# #         if actions[-1] == "END":\n# #             actions = actions[:-1]\n# #             data[-1] = timestamps[-1]\n# #             timestamps = timestamps[:-1]\n        \n# #         data.append([col.strip().split(" ")[0] for col in parts[1].strip().split(" -> ")])  \n# df\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.898Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"c5a92f9ab731421b8f78ada6653d00db\",\"cell_num\":20,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.899Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"469c03c456014d3fb1fe0a59ee7a9239\",\"cell_num\":20,\"cell_source\":\"# !pip install pandas\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.900Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"98598092d0f0436f8ea1d2366167da3e\",\"cell_num\":20,\"cell_source\":\"# !pip install scikit-learn\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.901Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ecdff8d93dc7461cb8cc26c07cb325dc\",\"cell_num\":20,\"cell_source\":\"# !pip install catboost\n# !pip install xgboost\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.901Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d80230aa092945a995c4ffc36f180879\",\"cell_num\":20,\"cell_source\":\"# pip install alive-progress\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.902Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"df830b570feb4b8696b1d8425f7a0ea8\",\"cell_num\":20,\"cell_source\":\"# !pip install tqdm\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.902Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"883140faf9354f9b8ee27c8bed3613e4\",\"cell_num\":20,\"cell_source\":\"import pandas as pd\nimport sklearn\nimport catboost\nimport sklearn.feature_extraction.text\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.tree import DecisionTreeClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nimport numpy as np\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.903Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"2ece2ea9e46945528db5bdc1bb585269\",\"cell_num\":20,\"cell_source\":\"import time\nfrom tqdm import tqdm\nimport gc\n\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.903Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"683db506d1644f4b94f0a29a732e7db4\",\"cell_num\":20,\"cell_source\":\"import zipfile\nwith zipfile.ZipFile("data/task1/jetnet_logs.zip", "r") as zip_ref:\n    zip_ref.extractall("data/task1")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.904Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"604910edb364430c96101538278e9f5a\",\"cell_num\":20,\"cell_source\":\"data = pd.read_csv("data/task1/jetnet_logs.txt", delimiter="\\t")\ndata.head()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.904Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7633b4b56e384e52a4b747dec629dbf1\",\"cell_num\":20,\"cell_source\":\"with open("data/task1/jetnet_logs.txt") as f:\n    content = f.readline()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.905Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"b2043ac24df64da387a757e4c31d8e78\",\"cell_num\":20,\"cell_source\":\"l = content.strip().split(\\":\\", 1)\n# print(l[1])\nl[1] = l[1].replace("-->", "->").strip().split("->")\n# print(l[1])\nl[1] = list(map(lambda x: x.strip().split(\\" \\", 1), l[1]))\n# actions = [t[0] for t in l[1]]\n# timestamps = [t[1] for t in l[1]]\nl\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:31.905Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5dd1dfd6fe554c0b8522072b2c4588e0\",\"cell_num\":20,\"cell_source\":\"f = open("data/task1/jetnet_logs.txt")\nlines = f.readlines()\ncolumns = ["user_id", "session_num", "action_time","action_name"]\ndf = pd.DataFrame([], columns = columns)\ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:01:58.453Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"2d52a354dbbf4c4da2629d738ece88ba\",\"cell_num\":13,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"127.0.0.1\",\"time\":\"2023-05-06T13:02:02.517Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"2d52a354dbbf4c4da2629d738ece88ba\",\"cell_num\":14,\"cell_source\":\"df0 = pd.DataFrame([], columns = ["user_id", "raw"])\ndf0\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":null,\"time\":\"2023-05-06T13:02:09.942Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"save_notebook\",\"cell_source\":\"[\n  {\n    \\"id\\": \\"111fa3a933264e8385f176644b4041e0\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# # Do not forget to check if your notebook log collection plugin is working\\nfrom mining_extension import check_logging\\ncheck_logging(\\\\"http://3.249.245.244:9999\\\\")\\",\n    \\"execution_count\\": 1\n  },\n  {\n    \\"id\\": \\"53ba4aeac322411c83900084555ee127\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# !pip install pandas\\",\n    \\"execution_count\\": 2\n  },\n  {\n    \\"id\\": \\"a9c504a6b6fb4e138a2f1e7d4d60ebd0\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# !pip install scikit-learn\\",\n    \\"execution_count\\": 3\n  },\n  {\n    \\"id\\": \\"cdc093edfe3b40d78021ad52480b77e1\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# !pip install catboost\\n# !pip install xgboost\\",\n    \\"execution_count\\": 4\n  },\n  {\n    \\"id\\": \\"57b2d5391ab849c78e0607b9d64fd371\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# pip install alive-progress\\",\n    \\"execution_count\\": 5\n  },\n  {\n    \\"id\\": \\"63930c685b4e49519c1c5a906a157e12\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"# !pip install tqdm\\",\n    \\"execution_count\\": 6\n  },\n  {\n    \\"id\\": \\"de60c6c77e964a748b568eec9247f792\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"import pandas as pd\\nimport sklearn\\nimport catboost\\nimport sklearn.feature_extraction.text\\nfrom sklearn.feature_extraction.text import TfidfVectorizer\\nfrom sklearn.tree import DecisionTreeClassifier\\nfrom catboost import CatBoostClassifier\\nfrom sklearn.linear_model import LogisticRegression\\nfrom sklearn.ensemble import RandomForestClassifier\\nfrom sklearn.metrics import roc_auc_score\\nfrom sklearn.model_selection import train_test_split\\nimport matplotlib.pyplot as plt\\nfrom xgboost import XGBClassifier\\nfrom sklearn.metrics import accuracy_score\\nimport numpy as np\\",\n    \\"execution_count\\": 7\n  },\n  {\n    \\"id\\": \\"449179430adc4093800c41c4fd915eb9\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"import time\\nfrom tqdm import tqdm\\nimport gc\\n\\",\n    \\"execution_count\\": 8\n  },\n  {\n    \\"id\\": \\"19e2a9efba27495e92d402f098c46118\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"import zipfile\\nwith zipfile.ZipFile("data/task1/jetnet_logs.zip", "r") as zip_ref:\\n    zip_ref.extractall("data/task1")\\",\n    \\"execution_count\\": 9\n  },\n  {\n    \\"id\\": \\"b07c7e7669db4a9880f4c941aacbb865\\",\n    \\"cell_type\\": \\"markdown\\",\n    \\"source\\": \\"# Extracting data\\"\n  },\n  {\n    \\"id\\": \\"621489d2a20d43929b7ae96ceea326bf\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"data = pd.read_csv("data/task1/jetnet_logs.txt", delimiter="\\\\t")\\ndata.head()\\",\n    \\"execution_count\\": 10\n  },\n  {\n    \\"id\\": \\"ba7e797c1b524a269a78900798dd6efb\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"with open("data/task1/jetnet_logs.txt") as f:\\n    content = f.readline()\\",\n    \\"execution_count\\": 11\n  },\n  {\n    \\"id\\": \\"6c870fd3e877493b8d0f15f61422f00d\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"l = content.strip().split(\\\\":\\\\", 1)\\n# print(l[1])\\nl[1] = l[1].replace("-->", "->").strip().split("->")\\n# print(l[1])\\nl[1] = list(map(lambda x: x.strip().split(\\\\" \\\\", 1), l[1]))\\n# actions = [t[0] for t in l[1]]\\n# timestamps = [t[1] for t in l[1]]\\nl\\",\n    \\"execution_count\\": 12\n  },\n  {\n    \\"id\\": \\"f1bacfd016f8403b86bdb447b1d4b66e\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"f = open("data/task1/jetnet_logs.txt")\\nlines = f.readlines()\\ncolumns = ["user_id", "session_num", "action_time","action_name"]\\ndf = pd.DataFrame([], columns = columns)\\ndf\\",\n    \\"execution_count\\": 13\n  },\n  {\n    \\"id\\": \\"fee6c5bfad7442e0a0b58c3c3b89eef0\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"df0 = pd.DataFrame([], columns = ["user_id", "raw"])\\nfor n, line in tqdm(enumerate(np.array(lines))):\\n    line = line.strip()\\n    if line:\\n        l = line.split(\\\\":\\\\", 1)\\n        ids = l[0][1:]\\n        l = l[1]\\n        l = l.replace("-->", "\\\\t").replace("->", "\\\\t").strip().split("\\\\t")\\n        for i, action in enumerate(np.array(l)):\\n            action = action.strip().split(\\\\" \\\\", 1)\\n            data = [ids, action]\\n            df0.loc[len(df)] = data\\n            del(data)\\n            del(action)\\n    gc.collect()\\n    del(l)\\ndf0\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"40b22e1a626d4ae08df59e536b4bb113\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"e583ff19a13941f38c47d4db871cf80b\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\n# for n, line in tqdm(enumerate(np.array(lines))):\\n# #     if n > 500: break\\n#     line = line.strip()\\n#     if line:\\n#         l = line.split(\\\\":\\\\", 1)\\n#         ids = l[0].replace("@", "")\\n#         l = l[1]\\n#         l = l.replace("-->", "\\\\t").replace("->", "\\\\t").strip().split("\\\\t")\\n#         for i, action in enumerate(np.array(l)):\\n#             action = action.strip().split(\\\\" \\\\", 1)\\n#             data = [ids, -1, "", ""]\\n#             if len(action) == 2:\\n#                 data[1]= i\\n#                 data[2] = action[1].strip()[1:-1]\\n#                 data[3] = action[0].strip()\\n#             try: \\n#                 df.loc[len(df)] = data\\n#                 del(data)\\n#                 del(action)\\n#             except:\\n#                 del(data)\\n#                 continue\\n#         gc.collect()\\n#         del(l)\\n# #         actions = l[1][1,:1]\\n# #         print(actions)\\n# #         timestamps = [t[1] for t in l[1]]\\n# #         if actions[-1] == "END":\\n# #             actions = actions[:-1]\\n# #             data[-1] = timestamps[-1]\\n# #             timestamps = timestamps[:-1]\\n        \\n# #         data.append([col.strip().split(" ")[0] for col in parts[1].strip().split(" -> ")])  \\n# df\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"f1c06458979c4399908691bf0df6622a\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\n\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"4f713aeb97164232886fe200c53119b4\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"ed3e8aa3387e49869b0554b690b7b99d\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\",\n    \\"execution_count\\": null\n  },\n  {\n    \\"id\\": \\"8ca92a9f4b8b43dc8b4c204d7e064a5f\\",\n    \\"cell_type\\": \\"code\\",\n    \\"source\\": \\"\\",\n    \\"execution_count\\": null\n  }\n]\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\"}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:14.460Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_restarting\",\"cell_index\":\"\",\"cell_num\":0,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.650Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"111fa3a933264e8385f176644b4041e0\",\"cell_num\":0,\"cell_source\":\"# # Do not forget to check if your notebook log collection plugin is working\nfrom mining_extension import check_logging\ncheck_logging(\\"http://3.249.245.244:9999\\")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.652Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ba4aeac322411c83900084555ee127\",\"cell_num\":0,\"cell_source\":\"# !pip install pandas\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.653Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a9c504a6b6fb4e138a2f1e7d4d60ebd0\",\"cell_num\":0,\"cell_source\":\"# !pip install scikit-learn\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.654Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"cdc093edfe3b40d78021ad52480b77e1\",\"cell_num\":0,\"cell_source\":\"# !pip install catboost\n# !pip install xgboost\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.655Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"57b2d5391ab849c78e0607b9d64fd371\",\"cell_num\":0,\"cell_source\":\"# pip install alive-progress\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.657Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"63930c685b4e49519c1c5a906a157e12\",\"cell_num\":0,\"cell_source\":\"# !pip install tqdm\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.658Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"de60c6c77e964a748b568eec9247f792\",\"cell_num\":0,\"cell_source\":\"import pandas as pd\nimport sklearn\nimport catboost\nimport sklearn.feature_extraction.text\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.tree import DecisionTreeClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\nimport numpy as np\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.659Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"449179430adc4093800c41c4fd915eb9\",\"cell_num\":0,\"cell_source\":\"import time\nfrom tqdm import tqdm\nimport gc\n\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.660Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"19e2a9efba27495e92d402f098c46118\",\"cell_num\":0,\"cell_source\":\"import zipfile\nwith zipfile.ZipFile("data/task1/jetnet_logs.zip", "r") as zip_ref:\n    zip_ref.extractall("data/task1")\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.661Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"621489d2a20d43929b7ae96ceea326bf\",\"cell_num\":0,\"cell_source\":\"data = pd.read_csv("data/task1/jetnet_logs.txt", delimiter="\\t")\ndata.head()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.661Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ba7e797c1b524a269a78900798dd6efb\",\"cell_num\":0,\"cell_source\":\"with open("data/task1/jetnet_logs.txt") as f:\n    content = f.readline()\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.662Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"6c870fd3e877493b8d0f15f61422f00d\",\"cell_num\":0,\"cell_source\":\"l = content.strip().split(\\":\\", 1)\n# print(l[1])\nl[1] = l[1].replace("-->", "->").strip().split("->")\n# print(l[1])\nl[1] = list(map(lambda x: x.strip().split(\\" \\", 1), l[1]))\n# actions = [t[0] for t in l[1]]\n# timestamps = [t[1] for t in l[1]]\nl\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
"{\"ip_address\":\"172.29.66.3\",\"time\":\"2023-05-06T13:02:15.663Z\",\"kernel_id\":\"82d8f1a7-ac5e-4f6d-95ed-9b1f8680a8af\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f1bacfd016f8403b86bdb447b1d4b66e\",\"cell_num\":0,\"cell_source\":\"f = open("data/task1/jetnet_logs.txt")\nlines = f.readlines()\ncolumns = ["user_id", "session_num", "action_time","action_name"]\ndf = pd.DataFrame([], columns = columns)\ndf\",\"cell_type\":\"code\",\"session_id\":\"57990a68-8e4a-4da1-b901-fd06338eb94d\",\"cell_output\":null}"[EVENT_SEPARATOR]
